import { ReadonlySignal } from '@preact/signals-core';
export { ReadonlySignal, Signal, batch, effect, signal, untracked } from '@preact/signals-core';

declare function computed<T>(compute: () => T, comparator?: (a: T, b: T) => boolean): ReadonlySignal<T>;

declare function deepEqual<T>(a: T, b: T): boolean;

declare function reactive(target: Object, propertyKey: string): void;
declare function derived(target: Object, propertyKey: string, descriptor: PropertyDescriptor): void;

type CleanupFunction = () => void;
type Effect = () => CleanupFunction | void;

declare function effects(...entries: Effect[]): CleanupFunction;

export { CleanupFunction, Effect, computed, deepEqual, derived, effects, reactive };
