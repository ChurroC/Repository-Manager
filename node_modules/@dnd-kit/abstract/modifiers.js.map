{"version":3,"sources":["src/modifiers/axis.ts","src/modifiers/boundingRectangle.ts"],"names":[],"mappings":";;;;;;;;AAAA;AAAA,EAEE;AAAA,EACA;AAAA,OAEK;AAOA,IAAM,gBAAN,cAA2B,SAAmC;AAAA,EACnE,MAAM,EAAC,UAAS,GAAkB;AAChC,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO;AAAA,IACT;AAEA,UAAM,EAAC,MAAM,MAAK,IAAI,KAAK;AAE3B,WAAO;AAAA,MACL,GAAG;AAAA,MACH,CAAC,IAAI,GAAG;AAAA,IACV;AAAA,EACF;AAGF;AAfO,IAAM,eAAN;AAcL,cAdW,cAcJ,aAAY,aAAa,aAAY;AAGvC,IAAM,yBAAyB,aAAa,UAAU;AAAA,EAC3D,MAAM;AAAA,EACN,OAAO;AACT,CAAC;AACM,IAAM,2BAA2B,aAAa,UAAU;AAAA,EAC7D,MAAM;AAAA,EACN,OAAO;AACT,CAAC;;;AClCM,SAAS,iCACd,OACA,WACA,cACA;AACA,QAAM,QAAQ;AAAA,IACZ,GAAG;AAAA,EACL;AAEA,MAAI,MAAM,kBAAkB,MAAM,UAAU,KAAK,aAAa,KAAK;AACjE,UAAM,IAAI,aAAa,MAAM,MAAM,kBAAkB;AAAA,EACvD,WACE,MAAM,kBAAkB,SAAS,UAAU,KAC3C,aAAa,MAAM,aAAa,QAChC;AACA,UAAM,IACJ,aAAa,MAAM,aAAa,SAAS,MAAM,kBAAkB;AAAA,EACrE;AAEA,MAAI,MAAM,kBAAkB,OAAO,UAAU,KAAK,aAAa,MAAM;AACnE,UAAM,IAAI,aAAa,OAAO,MAAM,kBAAkB;AAAA,EACxD,WACE,MAAM,kBAAkB,QAAQ,UAAU,KAC1C,aAAa,OAAO,aAAa,OACjC;AACA,UAAM,IACJ,aAAa,OAAO,aAAa,QAAQ,MAAM,kBAAkB;AAAA,EACrE;AAEA,SAAO;AACT","sourcesContent":["import {\n  DragOperation,\n  configurator,\n  Modifier,\n  DragDropManager,\n} from '@dnd-kit/abstract';\n\ninterface Options {\n  axis: 'x' | 'y';\n  value: number;\n}\n\nexport class AxisModifier extends Modifier<DragDropManager, Options> {\n  apply({transform}: DragOperation) {\n    if (!this.options) {\n      return transform;\n    }\n\n    const {axis, value} = this.options;\n\n    return {\n      ...transform,\n      [axis]: value,\n    };\n  }\n\n  static configure = configurator(AxisModifier);\n}\n\nexport const RestrictToVerticalAxis = AxisModifier.configure({\n  axis: 'x',\n  value: 0,\n});\nexport const RestrictToHorizontalAxis = AxisModifier.configure({\n  axis: 'y',\n  value: 0,\n});\n","import type {BoundingRectangle, Coordinates, Shape} from '@dnd-kit/geometry';\n\nexport function restrictShapeToBoundingRectangle(\n  shape: Shape,\n  transform: Coordinates,\n  boundingRect: BoundingRectangle\n) {\n  const value = {\n    ...transform,\n  };\n\n  if (shape.boundingRectangle.top + transform.y <= boundingRect.top) {\n    value.y = boundingRect.top - shape.boundingRectangle.top;\n  } else if (\n    shape.boundingRectangle.bottom + transform.y >=\n    boundingRect.top + boundingRect.height\n  ) {\n    value.y =\n      boundingRect.top + boundingRect.height - shape.boundingRectangle.bottom;\n  }\n\n  if (shape.boundingRectangle.left + transform.x <= boundingRect.left) {\n    value.x = boundingRect.left - shape.boundingRectangle.left;\n  } else if (\n    shape.boundingRectangle.right + transform.x >=\n    boundingRect.left + boundingRect.width\n  ) {\n    value.x =\n      boundingRect.left + boundingRect.width - shape.boundingRectangle.right;\n  }\n\n  return value;\n}\n"]}